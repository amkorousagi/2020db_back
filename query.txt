/*
package lab6;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class TestJDBC {
	public static  String URL = "jdbc:oracle:thin:@localhost:1521:orcl";
	public static  String USER_UNIVERSITY = "knuMovie";
	public static  String USER_PASSWORD ="oracle";//"comp322";
	//public static  String TABLE_NAME = "knuMovie";



	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Connection conn = null;
		Statement stmt = null;
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			System.out.println("Success!");
		}catch(ClassNotFoundException e){
			System.err.println("error = " + e.getMessage());
			System.exit(1);
		}

		try {
			conn = DriverManager.getConnection(URL,USER_UNIVERSITY, USER_PASSWORD);
			System.out.println("Success! conn");
		}catch(SQLException ex) {
			ex.printStackTrace();
			System.err.println("Cannot get a connection: " + ex.getMessage());
			System.exit(1);
		}


		try {

			conn.setAutoCommit(false);
			stmt = conn.createStatement();

			String admin_name = "account name 1";
			String admin_pass = "account pw 1";

			String basic_name = "account name 2";
			String basic_pass = "account pw 2";


			String name = admin_name;
			String pass = admin_pass;

			System.out.println("Enter name here : ");

		    try{
		        BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
		        name = bufferRead.readLine();

		    }
		    catch(IOException e)
		    {
		        e.printStackTrace();
		    }

		    System.out.println("Enter passwd here : ");

		    try{
		        BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
		        pass = bufferRead.readLine();

		    }
		    catch(IOException e)
		    {
		        e.printStackTrace();
		    }

			//3-b,3-c
			String sql = "SELECT account_id, permission FROM v_account WHERE account_name = '" + name + "' AND account_pw = '" + pass + "';";
			System.out.println(sql);
			ResultSet rs = stmt.executeQuery("select permission, account_id from v_account where account_name = '" + name + "' and account_pw = '" + pass + "'");//stmt.executeUpdate("select * from actor;");
			rs.next();
			ResultSet rs2;
			try {
				System.out.println(rs.getString("permission"));
			}
			catch(Exception e){
				System.err.println("such name/pw does not exist");
			}
			if(rs.getString("permission") == ("admin")) {
				System.out.println("you are admin");
				rs2 = stmt.executeQuery("select video_id, score, description, account_id from v_write, rate, rating where rating.rating_id = rate.rating_id and v_write.rating_id = rate.rating_id");
			}
			else {
				System.out.println("you are not admin");
				rs2 = stmt.executeQuery("select video_id, score, description, account_id from v_write, rate, rating where rating.rating_id = rate.rating_id and v_write.rating_id = rate.rating_id and v_write.account_id = " + rs.getInt("account_id"));
			}
			while(rs2.next()) {
				System.out.println("video id:"+rs2.getInt("video_id")+", score:"+rs2.getFloat("score")+", description:"+rs2.getString("description")
				+", rator:"+rs2.getInt("account_id"));
			}


			//3-d

			System.out.println("Enter vidoe_id here : ");
			String video_id = "";
		    try{
		        BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
		        video_id = bufferRead.readLine();

		    }
		    catch(IOException e)
		    {
		        e.printStackTrace();
		    }
		    ResultSet rs3 = stmt.executeQuery("select avg(score) as avg_score from rate, rating where rate.rating_id = rating.rating_id and rate.video_id =" + video_id + " group by video_id");
			while(rs3.next()) {
				System.out.println("where video_id = "+ video_id + ", avg_score" + rs3.getFloat("avg_score"));
			}
			//3-A


			//4-A
			String sql2 = "";
			String sql3 = "";
			String sql4 = "";
			String video_type = "";
			if(rs.getString("permission") == ("admin")) {
				System.out.println("for register new video, enter video type(movie, episode, knu_original)");
				try{
			        BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
			        video_type = bufferRead.readLine();
			        System.out.println(video_type);

			    }
			    catch(IOException e)
			    {
			        e.printStackTrace();
			    }
			}

			if(video_type.equals("movie")) {
				String video_name = "";
				String published_date = "";
				String uploaded_date = "";
				String runtime = "";
				BufferedReader bufferRead;
				String description = "";


				try {
					System.out.println("video_name:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_name = bufferRead.readLine();

					System.out.println("published_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					published_date = bufferRead.readLine();

					System.out.println("uploaded_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					uploaded_date = bufferRead.readLine();

					System.out.println("runtime:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					runtime = bufferRead.readLine();

					System.out.println("description:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					description = bufferRead.readLine();
				}
				catch(IOException e) {
					e.printStackTrace();
				}
				String sql_count_movie = "select count(*) as id from movie";
				String sql_count_video = "select count(*) as id from video";
				ResultSet rs_temp = stmt.executeQuery(sql_count_movie);
				rs_temp.next();
				int movie_id_temp = rs_temp.getInt("id") + 1;
				ResultSet rs_temp2 = stmt.executeQuery(sql_count_video);
				rs_temp2.next();
				int video_id_temp = rs_temp2.getInt("id") + 1;

				sql2 = "insert into movie(movie_id, description)"
						+ "values (" + movie_id_temp + ",'"+ description +"')";
				sql3 = "insert into refer_movie(movie_id, video_id)"
						+ "values ("+ movie_id_temp + "," + video_id_temp +")";
				sql4 = "insert into video(video_id, video_name, video_type, published_date, uploaded_date, runtime)"
						+ "values (" + video_id_temp + ",'" + video_name + "','" +video_type + "','" + published_date + "','" + uploaded_date + "'," +runtime +")";
				int count  = stmt.executeUpdate(sql2);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql4);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql3);
				System.out.println(count + " row affected");


			}else if(video_type.equals("episode")) {
				String video_name = "";
				String published_date = "";
				String uploaded_date = "";
				String runtime = "";
				BufferedReader bufferRead;
				String description = "";
				String season = "";
				String round = "";

				try {
					System.out.println("video_name:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_name = bufferRead.readLine();

					System.out.println("published_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					published_date = bufferRead.readLine();

					System.out.println("uploaded_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					uploaded_date = bufferRead.readLine();

					System.out.println("runtime:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					runtime = bufferRead.readLine();

					System.out.println("description:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					description = bufferRead.readLine();

					System.out.println("season:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					season = bufferRead.readLine();

					System.out.println("round:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					round = bufferRead.readLine();
				}
				catch(IOException e) {
					e.printStackTrace();
				}
				String sql_count_episode = "select count(*) as id from episode";
				String sql_count_video = "select count(*) as id from video";
				ResultSet rs_temp = stmt.executeQuery(sql_count_episode);
				rs_temp.next();
				int episode_id_temp = rs_temp.getInt("id") + 1;
				ResultSet rs_temp2 = stmt.executeQuery(sql_count_video);
				rs_temp2.next();
				int video_id_temp = rs_temp2.getInt("id") + 1;

				sql2 = "insert into episode(episode_id, description,season,round)"
						+ "values (" + episode_id_temp + ",'"+ description +"','"+season+"'," + round + ")";
				sql3 = "insert into refer_episode(episode_id, video_id)"
						+ "values ("+ episode_id_temp + "," + video_id_temp +")";
				sql4 = "insert into video(video_id, video_name, video_type, published_date, uploaded_date, runtime)"
						+ "values (" + video_id_temp + ",'" + video_name + "','" +video_type + "','" + published_date + "','" + uploaded_date + "'," +runtime +")";
				int count  = stmt.executeUpdate(sql2);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql4);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql3);
				System.out.println(count + " row affected");

			}else if(video_type.equals("knu_original")) {
				String video_name = "";
				String published_date = "";
				String uploaded_date = "";
				String runtime = "";
				BufferedReader bufferRead;
				String description = "";

				try {
					System.out.println("video_name:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_name = bufferRead.readLine();

					System.out.println("published_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					published_date = bufferRead.readLine();

					System.out.println("uploaded_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					uploaded_date = bufferRead.readLine();

					System.out.println("runtime:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					runtime = bufferRead.readLine();

					System.out.println("description:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					description = bufferRead.readLine();
				}
				catch(IOException e) {
					e.printStackTrace();
				}
				String sql_count_knu = "select count(*) as id from knu_original";
				String sql_count_video = "select count(*) as id from video";
				ResultSet rs_temp = stmt.executeQuery(sql_count_knu);
				rs_temp.next();
				int knu_id_temp = rs_temp.getInt("id") + 1;
				ResultSet rs_temp2 = stmt.executeQuery(sql_count_video);
				rs_temp2.next();
				int video_id_temp = rs_temp2.getInt("id") + 1;

				sql2 = "insert into knu_original(knu_original_id, description)"
						+ "values (" + knu_id_temp + ",'"+ description + "')";
				sql3 = "insert into refer_knu_original(knu_original_id, video_id)"
						+ "values ("+ knu_id_temp + "," + video_id_temp +")";
				sql4 = "insert into video(video_id, video_name, video_type, published_date, uploaded_date, runtime)"
						+ "values (" + video_id_temp + ",'" + video_name + "','" +video_type + "','" + published_date + "','" + uploaded_date + "'," +runtime +")";
				int count  = stmt.executeUpdate(sql2);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql4);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql3);
				System.out.println(count + " row affected");
			}else {
				System.err.println("such type does not exist");
			}


			//4-B
			sql2 = "";
			sql3 = "";
			sql4 = "";
			video_type = "";
			if(rs.getString("permission") == ("admin")) {
				System.out.println("for updating existing video, enter its video type(movie, episode, knu_original)");
				try{
			        BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
			        video_type = bufferRead.readLine();
			        System.out.println(video_type);

			    }
			    catch(IOException e)
			    {
			        e.printStackTrace();
			    }
			}

			if(video_type.equals("movie")) {
				String video_name = "";
				String published_date = "";
				String uploaded_date = "";
				String runtime = "";
				BufferedReader bufferRead;
				String description = "";
				String video_id_temp = "";
				String movie_id_temp = "";


				try {
					System.out.println("video_id:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_id_temp = bufferRead.readLine();

					System.out.println("movie_id:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					movie_id_temp = bufferRead.readLine();

					System.out.println("video_name:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_name = bufferRead.readLine();

					System.out.println("published_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					published_date = bufferRead.readLine();

					System.out.println("uploaded_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					uploaded_date = bufferRead.readLine();

					System.out.println("runtime:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					runtime = bufferRead.readLine();

					System.out.println("description:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					description = bufferRead.readLine();
				}
				catch(IOException e) {
					e.printStackTrace();
				}

				sql2 = "update movie"
						+ " set " + "description ='"+ description +"' "
						+ "where movie_id =" + movie_id_temp;
				sql4 = "update video"
						+ " set video_name ='" + video_name + "',published_date ='"+ published_date + "', uploaded_date = '" + uploaded_date + "', runtime=" +runtime
						+ " where video_id =" + video_id_temp;
				int count  = stmt.executeUpdate(sql2);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql4);
				System.out.println(count + " row affected");



			}else if(video_type.equals("episode")) {
				String video_name = "";
				String published_date = "";
				String uploaded_date = "";
				String runtime = "";
				BufferedReader bufferRead;
				String description = "";
				String season = "";
				String round = "";
				String video_id_temp = "";
				String episode_id_temp = "";

				try {
					System.out.println("video_id:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_id_temp = bufferRead.readLine();

					System.out.println("episode_id:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					episode_id_temp = bufferRead.readLine();

					System.out.println("video_name:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_name = bufferRead.readLine();

					System.out.println("published_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					published_date = bufferRead.readLine();

					System.out.println("uploaded_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					uploaded_date = bufferRead.readLine();

					System.out.println("runtime:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					runtime = bufferRead.readLine();

					System.out.println("description:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					description = bufferRead.readLine();

					System.out.println("season:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					season = bufferRead.readLine();

					System.out.println("round:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					round = bufferRead.readLine();
				}
				catch(IOException e) {
					e.printStackTrace();
				}


				sql2 = "update episode"
						+ " set description ='"+ description +"',season='"+season+"',round=" + round
						+ " where episode_id = " + episode_id_temp;

				sql4 = "update video"
						+ " set video_name ='" + video_name + "',published_date ='"+ published_date + "', uploaded_date = '" + uploaded_date + "', runtime=" +runtime
						+ " where video_id =" + video_id_temp;
				int count  = stmt.executeUpdate(sql2);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql4);
				System.out.println(count + " row affected");

			}else if(video_type.equals("knu_original")) {
				String video_name = "";
				String published_date = "";
				String uploaded_date = "";
				String runtime = "";
				BufferedReader bufferRead;
				String description = "";
				String knu_id_temp = "";
				String video_id_temp = "";

				try {
					System.out.println("video_id:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_id_temp = bufferRead.readLine();

					System.out.println("knu_original_id:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					knu_id_temp = bufferRead.readLine();

					System.out.println("video_name:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					video_name = bufferRead.readLine();

					System.out.println("published_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					published_date = bufferRead.readLine();

					System.out.println("uploaded_date(YY/MM/DD):");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					uploaded_date = bufferRead.readLine();

					System.out.println("runtime:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					runtime = bufferRead.readLine();

					System.out.println("description:");
					bufferRead = new BufferedReader(new InputStreamReader(System.in));
					description = bufferRead.readLine();
				}
				catch(IOException e) {
					e.printStackTrace();
				}
				sql2 = "update knu_original"
						+ " set " + "description ='"+ description +"' "
						+ " where knu_original_id =" + knu_id_temp;
				sql4 = "update video"
						+ " set video_name ='" + video_name + "',published_date ='"+ published_date + "', uploaded_date = '" + uploaded_date + "', runtime=" +runtime
						+ " where video_id =" + video_id_temp;
				int count  = stmt.executeUpdate(sql2);
				System.out.println(count + " row affected");
				count  = stmt.executeUpdate(sql4);
				System.out.println(count + " row affected");

			}else {
				System.err.println("such type does not exist");
			}



			//int count  = stmt.executeUpdate(sql2);
			//System.out.println(count + " row affected");

			conn.commit();

		}catch(SQLException ex2) {
			System.err.println("Cannot: " + ex2.getMessage());
			System.exit(1);
		}



	}

}
*/
